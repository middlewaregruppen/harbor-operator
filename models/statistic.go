// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Statistic statistic
//
// swagger:model Statistic
type Statistic struct {

	// The count of the private projects
	PrivateProjectCount int64 `json:"private_project_count"`

	// The count of the private repositories
	PrivateRepoCount int64 `json:"private_repo_count"`

	// The count of the public projects
	PublicProjectCount int64 `json:"public_project_count"`

	// The count of the public repositories
	PublicRepoCount int64 `json:"public_repo_count"`

	// The count of the total projects, only be seen by the system admin
	TotalProjectCount int64 `json:"total_project_count"`

	// The count of the total repositories, only be seen by the system admin
	TotalRepoCount int64 `json:"total_repo_count"`

	// The total storage consumption of blobs, only be seen by the system admin
	TotalStorageConsumption int64 `json:"total_storage_consumption"`
}

// Validate validates this statistic
func (m *Statistic) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this statistic based on context it is used
func (m *Statistic) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Statistic) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Statistic) UnmarshalBinary(b []byte) error {
	var res Statistic
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

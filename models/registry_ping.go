// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RegistryPing registry ping
//
// swagger:model RegistryPing
type RegistryPing struct {

	// The registry access key.
	AccessKey *string `json:"access_key,omitempty"`

	// The registry access secret.
	AccessSecret *string `json:"access_secret,omitempty"`

	// Credential type of the registry, e.g. 'basic'.
	CredentialType *string `json:"credential_type,omitempty"`

	// The registry ID.
	ID *int64 `json:"id,omitempty"`

	// Whether or not the certificate will be verified when Harbor tries to access the server.
	Insecure *bool `json:"insecure,omitempty"`

	// Type of the registry, e.g. 'harbor'.
	Type *string `json:"type,omitempty"`

	// The registry URL.
	URL *string `json:"url,omitempty"`
}

// Validate validates this registry ping
func (m *RegistryPing) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this registry ping based on context it is used
func (m *RegistryPing) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RegistryPing) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RegistryPing) UnmarshalBinary(b []byte) error {
	var res RegistryPing
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

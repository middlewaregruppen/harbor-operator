name: Release

on:
  push:
    tags:
    - "v*"
    branches:
    - "master"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  releases:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.19

    - name: Build Binaries
      run: |
        GOOS=linux GOARCH=amd64 BUILDPATH=./bin/harbor-operator-linux-amd64 make
        GOOS=linux GOARCH=arm BUILDPATH=./bin/harbor-operator-linux-arm make
        GOOS=linux GOARCH=arm64 BUILDPATH=./bin/harbor-operator-linux-arm64 make
        GOOS=windows GOARCH=amd64 BUILDPATH=./bin/harbor-operator-windows-amd64.exe make
        GOOS=darwin GOARCH=amd64 BUILDPATH=./bin/harbor-operator-darwin-amd64 make
        GOOS=darwin GOARCH=arm64 BUILDPATH=./bin/harbor-operator-darwin-arm64 make

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        draft: true
        artifacts: "./bin/*"

  packages:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}